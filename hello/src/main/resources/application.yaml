server:
  port: 28001
  servlet:
    context-path: /hello
spring:
  application:
    name: hello
  profiles:
    active: ${SERVER_EVN:dev}
  cloud:
    consul:
      enabled: false
      # 单机配置
      # host: localhost
      # port: 8500
      # 集群配置
      host: ${CONSUL_ENDPOINT:localhost:8500}
      config:
        # 开启配置中心
        enabled: true
        # watch选项为配置监视功能，主要监视配置的改变
        watch:
          #启用配置自动刷新
          enabled: true
          #刷新频率，单位：毫秒
          delay: 10000
          #刷新延迟时间，单位：秒
          wait-time: 30
          # 表示如果没有发现配置，是否抛出异常，true为是，false为否，当为false时，consul会打印warn级别的日志信息
        fail-fast: false

        # consul创建key值与环境的分隔符
        profile-separator: '-'

        # 配置文件的文件格式
        format: yaml
        # 设置应用的文件夹名称,默认值application 一般建议设置为微服务应用名称
        default-context: hello

        # 配置文件的存储的根路径，默认为config
        prefix: config
        # 配置文件存储key的值，或者理解为文件的名称，默认为data
        data-key: hello

      # 服务发现配置
      discovery:
        # 启用服务发现
        enabled: true
        # 启用服务注册
        register: true
        # 服务停止时取消注册
        deregister: true
        # 显示ip地址
        prefer-ip-address: true

        # 注册到consul的ip地址
        ip-address: ${LOCALHOST_IP:localhost}

        # 健康检查频率，也就是心跳频率
        health-check-interval: 15s
        # 设置健康检查失败多少秒后删除本服务
        health-check-critical-timeout: 15s
        # 健康检查的路径
        health-check-path: /actuator/health


        # 服务注册标识(服务 ID)，格式为：应用名称+服务器IP+端口，请勿使用随机数，因为它会在服务重启过程中，会在consul上生成多个实例
        instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
        # 注册的节点名称
        service-name: hello
        # 使用心跳检查push机制定期向consul server汇报自身存活情况，逾期没有汇报则server认为异常。
        heartbeat:
          enabled: true
